apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cert-manager-webhook-ovh.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cert-manager-webhook-ovh.labels" $ | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "cert-manager-webhook-ovh.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cert-manager-webhook-ovh.selectorLabels" $ | nindent 8 }}
    spec:
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
      serviceAccountName: {{ include "cert-manager-webhook-ovh.fullname" . }}
{{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --secure-port=8443
            - --tls-cert-file=/tls/tls.crt
            - --tls-private-key-file=/tls/tls.key
          env:
            - name: GROUP_NAME
              value: {{ .Values.groupName | quote }}
            {{- range $key, $val := .Values.environment }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end}}
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: https
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: https
          volumeMounts:
            - name: certs
              mountPath: /tls
              readOnly: true
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.securityContext.enabled }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
            readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
{{- end }}
      volumes:
        - name: certs
          secret:
            secretName: {{ include "cert-manager-webhook-ovh.servingCertificate" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
